module.exports=function(t){var e={};function n(r){if(e[r])return e[r].exports;var i=e[r]={i:r,l:!1,exports:{}};return t[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}return n.m=t,n.c=e,n.d=function(t,e,r){n.o(t,e)||Object.defineProperty(t,e,{configurable:!1,enumerable:!0,get:r})},n.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},n.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return n.d(e,"a",e),e},n.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},n.p="",n(n.s=7)}([function(t,e){var n=10,r=41,i=107,s=9,o=25;function u(t){return r+(t.script?t.script.length:i)}function c(t){return s+(t.script?t.script.length:o)}function a(t,e){return u({})*e}function l(t,e){return n+t.reduce(function(t,e){return t+u(e)},0)+e.reduce(function(t,e){return t+c(e)},0)}function p(t){return"number"!=typeof t?NaN:isFinite(t)?Math.floor(t)!==t?NaN:t<0?NaN:t:NaN}function f(t){return t.reduce(function(t,e){return t+p(e.value)},0)}var h=c({});t.exports={dustThreshold:a,finalize:function(t,e,n){var r=l(t,e),i=n*(r+h),s=f(t)-(f(e)+i);s>a(0,n)&&(e=e.concat({value:s}));var o=f(t)-f(e);return isFinite(o)?{inputs:t,outputs:e,fee:o}:{fee:n*r}},inputBytes:u,outputBytes:c,sumOrNaN:f,sumForgiving:function(t){return t.reduce(function(t,e){return t+(isFinite(e.value)?e.value:0)},0)},transactionBytes:l,uintOrNaN:p}},function(t,e){t.exports=require("base58check")},function(t,e){t.exports=require("safe-buffer")},function(t,e){t.exports=require("coinselect")},function(t,e){t.exports=require("bitcoin-core")},function(t,e){t.exports=require("bitcoinjs-lib")},function(t,e,n){const r=n(5),i=n(4),{Buffer:s}=n(2),o=(n(3),n(1)),u=n(0);class c{constructor(t){this.network="mainnet"===t?r.networks.bitcoin:r.networks.testnet}static coinSelect(t,e,n){if(t=t.concat().sort((t,e)=>t.value-e.value),!isFinite(u.uintOrNaN(n)))return{};let r=0,i=[],s=u.sumOrNaN(e);for(var o=0;o<t.length;++o){let c=t[o];if(r+=u.uintOrNaN(c.value),i.push(c),!(r<s+n))return{inputs:i,outputs:e,changeValue:r-(s+n)}}return{fee:n}}generateAccount(){const t=new r.ECPair.makeRandom({network:this.network});return{privateKey:t.toWIF(),publicKey:t.Q.getEncoded().toString("hex"),address:t.getAddress()}}createMultisigAddress(t,e){const n=e.map(t=>s.from(t,"hex")),i=r.script.multisig.output.encode(t,n,this.network),o=r.script.scriptHash.output.encode(r.crypto.hash160(i),this.network);return{address:r.address.fromOutputScript(o,this.network),accountExtrsInfo:{redeemScript:i}}}isValidAddress(t){try{const e=o.decode(t).prefix.toString("hex"),n="6f"===e||"c4"===e?r.networks.testnet:r.networks.bitcoin;return this.network===n}catch(t){return!1}}signTransaction(t,e,n){const i=e.privateKey,o=r.TransactionBuilder.fromTransaction(r.Transaction.fromHex(t.txhex),this.network),u=r.ECPair.fromWIF(i,this.network);for(let e=0;e<t.input.length;e++){const r=s.from(n[t.input[e]],"hex");o.sign(e,u,r)}const c=o.inputs.map(t=>t.signatures),a=[];for(let t=0;t<c.length;t++){let e={},n=c[t].filter(t=>Boolean(t))[0];e[String(c[t].indexOf(n))]=n.toString("hex"),a.push(e)}return a}buildSignatures(t){let e=[];for(let n=0;n<t.length;n++)for(let r=0;r<t[0].length;r++){e[r]=e[r]||[];let i=Number(Object.keys(t[n][r])[0]);e[r][i]=t[n][r][i]}return e}buildTransaction(t,e,n){let i=this.buildSignatures(e),o=[];for(let u=0;u<e[0].length;u++){let e=t.input[u];o.push({redeemScript:s.from(n[e],"hex"),redeemScriptType:"multisig",pubKeys:r.script.multisig.output.decode(s.from(n[e],"hex")).pubKeys,signatures:i[u].map(t=>s.from(t,"hex")),signScript:s.from(n[t.input[u]],"hex"),signType:"multisig",prevOutScript:r.crypto.hash160(s.from(n[e],"hex")),prevOutType:"scripthash",witness:!1})}const u=r.TransactionBuilder.fromTransaction(r.Transaction.fromHex(t.txhex),this.network);return u.inputs=o,u.build().toHex()}getSpentTidsFromRawTransaction(t){let e=[];return r.Transaction.fromHex(t).ins.forEach((t,n)=>{let r={txid:t.hash.reverse().toString("hex")};e.push(r.txid)}),e}}t.exports={Utils:c,Client:class{constructor(t,e,n,s,o){this.network="mainnet"===n?r.networks.bitcoin:r.networks.testnet,this.client=new i({username:t,password:e,network:n,port:s,host:o})}async getAddress(t,e){const n=await this.client.getRawTransaction(t);return(await this.client.decodeRawTransaction(n)).vout[e].scriptPubKey.addresses[0]}importPrivKeyToWallet(t,e){this.client.importPrivKey(t.privateKey,"",!1,e)}getUTXOs(t,e){this.client.listUnspent(0,(n,r)=>{if(n)return e(n);const i=r.sort((t,e)=>t.amount-e.amount).filter(e=>t.indexOf(e.txid)<0).filter(t=>""===t.account).map(t=>({txid:t.txid,vout:t.vout,value:Math.round(1e8*t.amount)}));e(null,i)})}createNewTransaction(t,e,n,i,s){i=i||1e4;let o={};this.getUTXOs(n,(n,u)=>{if(n)return s(n);let{inputs:a,outputs:l,changeValue:p}=c.coinSelect(u,e,i);if(!a||!l)return s("No inputs or outputs");let f=new r.TransactionBuilder(this.network);try{a.forEach(t=>f.addInput(t.txid,t.vout)),l.forEach(t=>f.addOutput(t.address,t.value)),f.addOutput(t.address,p)}catch(t){return s(t.message)}o.txhex=f.buildIncomplete().toHex();let h=[];for(let t=0;t<a.length;t++)h.push(this.getAddress(a[t].txid,a[t].vout));Promise.all(h).then(t=>{o.txhex=f.buildIncomplete().toHex(),o.input=t,s(null,o)})})}sendRawTransaction(t,e){this.client.sendRawTransaction(t,e)}getTransactionStatus(t,e){this.client.getTransaction(t,e)}getTransactionHistory(t,e){this.client.listTransactions((n,r)=>{if(n)return e(n);const i=r.filter(e=>e.address===t);e(null,i)})}importAddress(t,e){this.client.importAddress(t,"",!1,e)}listSinceBlock(t,e){this.client.listSinceBlock(t,1,!0,e)}getTransactionsFromBlockHeight(t,e){this.client.getBlockchainInfo((n,r)=>{if(n)return e(n);this.client.getBlockHash(t,(t,n)=>{if(t)return e(t);this.client.listSinceBlock(n,1,!0,(t,n)=>{if(t)return e(t);const i=r.blocks;n.transactions.map(t=>{t.height=i-t.confirmations+1}),e(null,n)})})})}getCurrentHeight(t){this.client.getBlockchainInfo((e,n)=>{if(e)return t(e);t(null,n.blocks)})}}}},function(t,e,n){t.exports={bitcoin:n(6)}}]);